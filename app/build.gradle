plugins {
    id 'com.google.protobuf'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'com.android.application'
}


android {
    compileSdk 35
    namespace "it.reyboz.bustorino"

    defaultConfig {
        applicationId "it.reyboz.bustorino"
        minSdkVersion 24
        targetSdkVersion 35
        buildToolsVersion = '35.0.1'
        versionCode 66
        versionName "2.4.3"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/assets/schemas/".toString()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/assets/schemas/".toString())

    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-dev"
        }
        gitpull{
            applicationIdSuffix ".gitdev"
            versionNameSuffix "-gitdev"
        }
    }


    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        //new libraries
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain 17
    }
    lint {
        abortOnError false
    }
    androidResources {
        generateLocaleConfig true
    }

    buildFeatures{
        buildConfig = true
    }

    splits{
        abi{
            enable true
            reset()
            // Specifies a list of ABIs for Gradle to create APKs for.
            include "x86", "x86_64","armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }

    packagingOptions { resources.excludes.add("META-INF/*") }

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.22.3'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Guava implementation for DBUpdateWorker
    implementation 'com.google.guava:guava:32.0.1-android'
    
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.activity:activity:$activity_version"
    implementation "androidx.annotation:annotation:1.9.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation "androidx.preference:preference:$preference_version"

    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"


    implementation "com.google.android.material:material:1.12.0"
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.3.0"


    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    implementation 'com.android.volley:volley:1.2.1'
    //maplibre
    implementation 'org.maplibre.gl:android-sdk:11.8.6'
    implementation 'org.maplibre.gl:android-sdk-turf:6.0.1'

    implementation 'org.maplibre.gl:android-plugin-annotation-v9:3.0.2'

    // remember to enable maven repo jitpack.io when wanting to use osmbonuspack
    //implementation 'com.github.MKergall:osmbonuspack:6.9.0'
    // ACRA
    implementation "ch.acra:acra-mail:$acra_version"
    implementation "ch.acra:acra-dialog:$acra_version"
    // google transit realtime
    implementation 'com.google.protobuf:protoc:3.22.3'

    implementation 'com.google.protobuf:protobuf-javalite:3.22.3'
    // mqtt library
    //implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    //implementation 'com.github.hannesa2:paho.mqtt.android:4.4'
    implementation("com.hivemq:hivemq-mqtt-client:1.3.10")
    implementation(platform("com.hivemq:hivemq-mqtt-client-websocket:1.3.10"))
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Legacy
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Room components
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    //multidex - we need this to build the app
    implementation "androidx.multidex:multidex:$multidex_version"

    implementation 'de.siegmar:fastcsv:2.2.2'

    testImplementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'

    implementation "androidx.test.ext:junit:1.1.5"
    implementation "androidx.test:core:$androidXTestVersion"
    implementation "androidx.test:runner:$androidXTestVersion"
    implementation "androidx.room:room-testing:$room_version"

    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test:core:$androidXTestVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation "androidx.room:room-testing:$room_version"

}

